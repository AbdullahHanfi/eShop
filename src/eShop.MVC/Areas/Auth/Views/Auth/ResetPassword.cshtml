@model ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
}

@section style {
    <style>
        .reset-password-section {
            min-height: calc(100vh - 95px);
            padding: 60px 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            position: relative;
            overflow: hidden;
        }

            /* Animated background shapes */
            .reset-password-section::before,
            .reset-password-section::after {
                content: '';
                position: absolute;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.1);
                animation: float 20s infinite ease-in-out;
            }

            .reset-password-section::before {
                width: 300px;
                height: 300px;
                top: -150px;
                right: -150px;
                animation-delay: 0s;
            }

            .reset-password-section::after {
                width: 200px;
                height: 200px;
                bottom: -100px;
                left: -100px;
                animation-delay: 10s;
            }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0) rotate(0deg);
            }

            50% {
                transform: translateY(-20px) rotate(180deg);
            }
        }

        .reset-card {
            background: rgba(255, 255, 255, 0.98);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 20px 40px -10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            position: relative;
            transition: all 0.3s ease;
        }

            .reset-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 25px 50px -10px rgba(0, 0, 0, 0.25);
            }

        .reset-card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 2rem;
            text-align: center;
            position: relative;
        }

        .reset-icon {
            width: 80px;
            height: 80px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            animation: pulse 2s infinite;
        }

            .reset-icon i {
                font-size: 2.5rem;
                color: white;
            }

        .reset-title {
            color: white;
            font-size: 1.75rem;
            font-weight: 600;
            margin: 0;
        }

        .reset-subtitle {
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.95rem;
            margin-top: 0.5rem;
        }

        .form-floating {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .form-control {
            height: 60px;
            padding: 1rem 1rem 0.5rem;
            font-size: 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 12px;
            transition: all 0.3s ease;
            background-color: #f9fafb;
        }

            .form-control:focus {
                background-color: white;
                border-color: #667eea;
                box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            }

        .form-floating label {
            padding: 1rem;
            color: #6b7280;
            transition: all 0.2s ease;
        }

        .form-control:focus ~ label,
        .form-control:not(:placeholder-shown) ~ label {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            color: #667eea;
            background: white;
            transform: translateY(-50%);
            top: 0.5rem;
            left: 0.75rem;
            height: fit-content;
            background: none;
        }

        .password-requirements {
            margin-top: 1rem;
            padding: 1rem;
            background: #f3f4f6;
            border-radius: 8px;
            font-size: 0.875rem;
        }

        .requirement {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
            color: #6b7280;
            transition: color 0.3s ease;
        }

            .requirement.met {
                color: #10b981;
            }

            .requirement i {
                margin-right: 0.5rem;
                font-size: 1rem;
            }

        .btn-reset {
            width: 100%;
            padding: 1rem;
            font-size: 1.1rem;
            font-weight: 600;
            border: none;
            border-radius: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .btn-reset:hover {
                transform: translateY(-2px);
                box-shadow: 0 10px 20px -5px rgba(102, 126, 234, 0.5);
            }

            .btn-reset:active {
                transform: translateY(0);
            }

            .btn-reset::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.2);
                transform: translate(-50%, -50%);
                transition: width 0.6s, height 0.6s;
            }

            .btn-reset:hover::before {
                width: 300px;
                height: 300px;
            }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
            z-index: 10;
        }

            .password-toggle:hover {
                color: #667eea;
            }

        .alert-modern {
            border: none;
            border-radius: 12px;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            animation: slideDown 0.3s ease;
        }

            .alert-modern i {
                font-size: 1.25rem;
                margin-right: 0.75rem;
            }

        @@keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .back-link {
            display: inline-flex;
            align-items: center;
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            margin-top: 1.5rem;
            transition: all 0.3s ease;
        }

            .back-link:hover {
                color: #764ba2;
                transform: translateX(-5px);
            }

            .back-link i {
                margin-right: 0.5rem;
                transition: transform 0.3s ease;
            }

            .back-link:hover i {
                transform: translateX(-3px);
            }

        /* Loading state */
        .btn-reset.loading {
            color: transparent;
        }

            .btn-reset.loading::after {
                content: '';
                position: absolute;
                width: 20px;
                height: 20px;
                top: 50%;
                left: 50%;
                margin-left: -10px;
                margin-top: -10px;
                border: 2px solid white;
                border-radius: 50%;
                border-top-color: transparent;
                animation: spinner 0.8s linear infinite;
            }

        @@keyframes spinner {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
}

<section class="reset-password-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 col-lg-5 col-xl-4">
                <div class="reset-card">
                    <div class="reset-card-header">
                        <div class="reset-icon">
                            <i class="fas fa-key"></i>
                        </div>
                        <h1 class="reset-title">Reset Password</h1>
                        <p class="reset-subtitle">Create a strong new password for your account</p>
                    </div>

                    <div class="card-body p-4">
                        <form asp-action="ResetPassword" id="resetPasswordForm">
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger alert-modern" role="alert">
                                <i class="fas fa-exclamation-circle"></i>
                                <div></div>
                            </div>

                            <!-- Hidden fields -->
                            <input asp-for="userId" type="hidden" />
                            <input asp-for="Email" type="hidden" />
                            <input asp-for="Token" type="hidden" />

                            <!-- New Password -->
                            <div class="form-floating position-relative">
                                <input asp-for="Password"
                                       class="form-control"
                                       placeholder="New Password"
                                       id="newPassword"
                                       autocomplete="new-password" />
                                <label asp-for="Password">New Password</label>
                                <span class="password-toggle" onclick="togglePassword('newPassword')">
                                    <i class="far fa-eye" id="newPasswordToggle"></i>
                                </span>
                                <span asp-validation-for="Password" class="text-danger small"></span>
                            </div>

                            <!-- Confirm Password -->
                            <div class="form-floating position-relative">
                                <input asp-for="ConfirmPassword"
                                       class="form-control"
                                       placeholder="Confirm Password"
                                       id="confirmPassword"
                                       autocomplete="new-password" />
                                <label asp-for="ConfirmPassword">Confirm Password</label>
                                <span class="password-toggle" onclick="togglePassword('confirmPassword')">
                                    <i class="far fa-eye" id="confirmPasswordToggle"></i>
                                </span>
                                <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                            </div>

                            <!-- Password Requirements -->
                            <div class="password-requirements" id="passwordRequirements">
                                <p class="mb-2 fw-semibold">Password must contain:</p>
                                <div class="requirement" id="reqLength">
                                    <i class="far fa-circle"></i>
                                    <span>At least 6 characters</span>
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <button type="submit" class="btn btn-reset mt-4" id="submitBtn">
                                Reset Password
                            </button>

                            <!-- Back to Login -->
                            <div class="text-center">
                                <a href="//Login" class="back-link">
                                    <i class="fas fa-arrow-left"></i>
                                    Back to Login
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Password visibility toggle
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const toggle = document.getElementById(fieldId + 'Toggle');

            if (field.type === 'password') {
                field.type = 'text';
                toggle.classList.remove('fa-eye');
                toggle.classList.add('fa-eye-slash');
            } else {
                field.type = 'password';
                toggle.classList.remove('fa-eye-slash');
                toggle.classList.add('fa-eye');
            }
        }

        // Password strength checker
        document.getElementById('newPassword').addEventListener('input', function(e) {
            const password = e.target.value;
            const requirements = {
                length: password.length >= 6
            };
            // Update requirements display
            updateRequirement('reqLength', requirements.length);
        });

        function updateRequirement(id, met) {
            const element = document.getElementById(id);
            const icon = element.querySelector('i');

            if (met) {
                element.classList.add('met');
                icon.classList.remove('fa-circle');
                icon.classList.add('fa-check-circle');
            } else {
                element.classList.remove('met');
                icon.classList.remove('fa-check-circle');
                icon.classList.add('fa-circle');
            }
        }

        // Form submission
        document.getElementById('resetPasswordForm').addEventListener('submit', function(e) {
            const submitBtn = document.getElementById('submitBtn');
            const password = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            // Basic validation
            if (password !== confirmPassword) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Password Mismatch',
                    text: 'The passwords you entered do not match.',
                    confirmButtonColor: '#667eea'
                                });
                return;
            }

            // Show loading state
            submitBtn.classList.add('loading');
            submitBtn.disabled = true;
        });

        // Auto-focus on first input
        window.addEventListener('load', function() {
            document.getElementById('newPassword').focus();
        });

        // Real-time password match validation
        document.getElementById('confirmPassword').addEventListener('input', function(e) {
            const password = document.getElementById('newPassword').value;
            const confirmPassword = e.target.value;
            const validationSpan = e.target.nextElementSibling.nextElementSibling;

            if (confirmPassword && password !== confirmPassword) {
                validationSpan.textContent = 'Passwords do not match';
                e.target.classList.add('is-invalid');
            } else {
                validationSpan.textContent = '';
                e.target.classList.remove('is-invalid');
            }
        });
    </script>
}