@model LogViewModel
@{
    ViewData["Title"] = "System Logs";
}

<div class="container-fluid">
    <h2>System Logs</h2>

    @if (TempData["SuccessMessage"] != null){
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null){
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" action="@Url.Action("Logs", "Admin")" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Level</label>
                    <select asp-for="LevelFilter" asp-items="Model.LevelFilterOptions" name="level"
                            class="form-control">
                        <option value="">All Levels</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Start Date</label>
                    <input type="datetime-local" name="startDate" class="form-control"
                           value="@Model.StartDate?.ToString("yyyy-MM-ddTHH:mm")"/>
                </div>
                <div class="col-md-3">
                    <label class="form-label">End Date</label>
                    <input type="datetime-local" name="endDate" class="form-control"
                           value="@Model.EndDate?.ToString("yyyy-MM-ddTHH:mm")"/>
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <div>
                        <button type="submit" class="btn btn-primary">Filter</button>
                        <a href="@Url.Action("Logs", "Admin")" class="btn btn-secondary">Clear</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Logs Table -->
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span>Total Logs: @Model.TotalCount</span>
            <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#cleanupModal">
                <i class="bi bi-trash"></i> Cleanup Old Logs
            </button>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                    <tr>
                        <th>Timestamp</th>
                        <th>Level</th>
                        <th>Message</th>
                        <th>Exception</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var log in Model.Logs){
                        <tr>
                            <td>@log.TimeStamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                            <td>
                                @{
                                    var badgeClass = log.Level switch
                                    {
                                        "Fatal" => "bg-dark",
                                        "Error" => "bg-danger",
                                        "Warning" => "bg-warning text-dark",
                                        "Information" => "bg-info text-dark",
                                        "Debug" => "bg-secondary",
                                        _ => "bg-light text-dark"
                                    };
                                }
                                <span class="badge @badgeClass">@log.Level</span>
                            </td>
                            <td class="text-truncate" style="max-width: 400px;" title="@log.Message">
                                @log.Message
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(log.Exception)){ <span
                                    class="badge bg-danger">Exception</span> }
                                else{ <span class="text-muted">-</span> }
                            </td>
                            <td>
                                <a asp-action="LogDetails" asp-route-id="@log.Id" class="btn btn-sm btn-info">
                                    <i class="bi bi-eye"></i> Details
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>

            @if (!Model.Logs.Any()){
                <div class="text-center py-4">
                    <p class="text-muted">No logs found matching the current filters.</p>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1){
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link"
                       href="@Url.Action("Logs", "Admin", new { page = Model.CurrentPage - 1, level = Model.LevelFilter, startDate = Model.StartDate, endDate = Model.EndDate })">
                        Previous
                    </a>
                </li>

                @for (int i = 1; i <= Model.TotalPages; i++){
                    if (i == 1 || i == Model.TotalPages || (i >= Model.CurrentPage - 2 && i <= Model.CurrentPage + 2)){
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                               href="@Url.Action("Logs", "Admin", new { page = i, level = Model.LevelFilter, startDate = Model.StartDate, endDate = Model.EndDate })">
                                @i
                            </a>
                        </li>
                    }
                    else if (i == Model.CurrentPage - 3 || i == Model.CurrentPage + 3){
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                       href="@Url.Action("Logs", "Admin", new { page = Model.CurrentPage + 1, level = Model.LevelFilter, startDate = Model.StartDate, endDate = Model.EndDate })">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<!-- Cleanup Modal -->
<div class="modal fade" id="cleanupModal" tabindex="-1" aria-labelledby="cleanupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CleanupLogs" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="cleanupModalLabel">Cleanup Old Logs</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Delete logs older than:</p>
                    <div class="mb-3">
                        <label for="daysToKeep" class="form-label">Days to keep</label>
                        <input type="number" class="form-control" id="daysToKeep" name="daysToKeep" value="30" min="0"
                               max="365">
                    </div>
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i> This action cannot be undone!
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Logs</button>
                </div>
            </form>
        </div>
    </div>
</div>